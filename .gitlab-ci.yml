stages:
  - lint
  - test
  - publish
  - weekly_tests

variables:
  EEO_DEPS: $REGISTRY_GITLAB/extracteo/extracteo_deps
  EO_CONTAINER: $REGISTRY_GITLAB/eo-containers/python
  SU_CHANGES: sertit/[^_]*.{py,xml}

lint:
  image: python:3.8-buster
  stage: lint
  script:
    - python -m pip install --upgrade pip
    - pip install flake8
    - flake8 .
  except:
    - tags

pytest:
  image: $EEO_DEPS:38
  stage: test
  variables:
    CI_SERTIT_USE_S3: "0"
  before_script:
    - python -m pip install --upgrade pip
    - pip install --ignore-installed PyYAML
    - pip install -e .[full]
  script:
    - pytest -v --durations=0 --cov-report term --cov-report xml:cov.xml --cov=sertit CI/SCRIPTS --cov-config=.coveragerc --log-cli-level DEBUG --capture=sys
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'
  tags:
    - sertit
    - linux
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - changes:
        - $SU_CHANGES
        - CI/**/*.{py,xml}
        - .gitlab-ci.yml
        - pytest.ini
  needs: [ "lint" ]

pytest_s3:
  image: $EEO_DEPS:38
  stage: test
  before_script:
    - python -m pip install --upgrade pip
    - pip install --ignore-installed PyYAML
    - pip install -e .[full]
  script:
    - pytest -v --durations=0 --cov-report term --cov-report xml:cov.xml --cov=sertit CI/SCRIPTS --cov-config=.coveragerc --log-cli-level DEBUG --capture=sys
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'
  tags:
    - sertit
    - linux
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - changes:
        - $SU_CHANGES
        - CI/**/*.{py,xml}
        - .gitlab-ci.yml
        - pytest.ini
  needs: [ "lint" ]

tox-linux-3.8:on-schedule:
  image: $EO_CONTAINER:3.8
  stage: weekly_tests
  before_script:
    - python -m pip install --upgrade pip
    - pip install tox
  script:
    - tox -c tox.ini -e py38
  tags:
    - sertit
    - linux
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: always

tox-linux-3.9:on-schedule:
  image: $EO_CONTAINER:3.9
  stage: weekly_tests
  before_script:
    - python -m pip install --upgrade pip
    - pip install tox
  script:
    - tox -c tox.ini -e py39
  tags:
    - sertit
    - linux
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: always

tox-windows:on-schedule:
  stage: weekly_tests
  before_script:
    - pip install tox
  script:
    - tox -c tox-conda.ini
  tags:
    - sertit
    - windows
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: always
