stages:
  - lint
  - test
  - publish
  - doc
  - weekly_tests

lint:
  image: python:3.7-buster
  stage: lint
  script:
    - python -m pip install --upgrade pip
    - pip install flake8
    - flake8 .
  tags:
    - linux
  except:
    - tags

pytest:
  image: docker.sertit.unistra.fr/extracteo/extracteo_deps:latest
  stage: test
  before_script:
    - python -m pip install --upgrade pip
    - pip install --ignore-installed PyYAML
    - pip install -e .[full]
  script:
    - pytest -v --durations=0 --cov-report term --cov-report xml:cov.xml --cov=sertit CI/SCRIPTS --cov-config=.coveragerc
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'
  tags:
    - linux
  rules:
    - if: '$CI_COMMIT_TAG == null'

upload_wheel:linux:
  image: python:3.7-buster
  stage: publish
  script:
    - pip install twine
    - python setup.py sdist bdist_wheel
    - TWINE_PASSWORD=${PYPI_PWD} TWINE_USERNAME=${PYPI_TOKEN} python -m twine upload dist/*
  tags:
    - linux
  only:
    - tags

pages:
  image: docker.sertit.unistra.fr/extracteo/extracteo_deps:latest
  stage: docs
  script:
    - python -m pip install --upgrade pip
    - pip install -r requirements-doc.txt --ignore-installed PyYAML
    - sphinx-build docs/ docs/_build/html/
    - mv docs/_build/html/ public/
  artifacts:
    paths:
      - public
  tags:
    - linux
  rules:
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE != "schedule"'

#pages-github:
#  image:
#    name: docker.sertit.unistra.fr/sertit/eo-containers/python:3.7
#    entrypoint: [ "" ]
#  stage: doc
#  script:
#    - python -m pip install --upgrade pip
#    - pip install pre-commit -r requirements.txt
#    - pdoc sertit -o docs -f --html --template-dir doc_template
#    - git config user.email "remi.braun@unistra.fr"
#    - git config user.name "CI"
#    - git add .
#    - git diff-index --quiet HEAD || git commit -m "Documentating and linting" --allow-empty  # ACHTUNG FOR NOW ALLOW-EMPTY IS SET BUT CREATES EMPTY COMMITS !!! WHY DOES IT FAILS NOW ? DONT KNOW
#    - git remote set-url origin https://gitlab-ci-token:${CI_PUSH_PASSWORD}@code.sertit.unistra.fr/SERTIT/sertit-utils.git
#    - git push origin HEAD:master -o ci.skip
#  tags:
#    - linux
#  only:
#    - tags



tox-linux-3.7:on-schedule:
  image: docker.sertit.unistra.fr/sertit/eo-containers/python:3.7
  stage: weekly_tests
  before_script:
    - python -m pip install --upgrade pip
    - pip install tox
  script:
    - tox -c tox.ini -e py37
  tags:
    - linux
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'

tox-linux-3.8:on-schedule:
  image: docker.sertit.unistra.fr/sertit/eo-containers/python:3.8
  stage: weekly_tests
  before_script:
    - python -m pip install --upgrade pip
    - pip install tox
  script:
    - tox -c tox.ini -e py38
  tags:
    - linux
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'

tox-linux-3.9:on-schedule:
  image: docker.sertit.unistra.fr/sertit/eo-containers/python:3.9
  stage: weekly_tests
  before_script:
    - python -m pip install --upgrade pip
    - pip install tox
  script:
    - tox -c tox.ini -e py39
  tags:
    - linux
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'

#tox-windows:on-schedule:
#  stage: weekly_tests
#  before_script:
#    - python -m pip install --upgrade pip
#    - pip install tox
#  script:
#    - tox -c tox-conda.ini
#  tags:
#    - windows
#    - conda
#  rules:
#    - if: '$CI_PIPELINE_SOURCE == "schedule"'
